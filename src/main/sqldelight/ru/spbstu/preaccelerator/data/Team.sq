import ru.spbstu.preaccelerator.domain.entities.Team;
import ru.spbstu.preaccelerator.domain.entities.user.Tracker;

CREATE TABLE Team (
  id BIGSERIAL AS Team.Id PRIMARY KEY,
  name TEXT UNIQUE NOT NULL,
  trackerId BIGINT AS Tracker.Id NOT NULL
);

CREATE INDEX team_tracker_id_index ON Team(trackerId);

getAll:
SELECT * FROM Team;

getPaginatedWithSentProtocols:
SELECT DISTINCT Team.* FROM Team
JOIN ProtocolStatus ON ProtocolStatus.teamId = Team.id
WHERE ProtocolStatus.value = 'Sent'
ORDER BY Team.id
LIMIT :limit OFFSET :offset;

countWithSentProtocols:
SELECT COUNT(DISTINCT Team.id) FROM Team
JOIN ProtocolStatus ON ProtocolStatus.teamId = Team.id
WHERE ProtocolStatus.value = 'Sent';

get:
SELECT * FROM Team
WHERE id = :id;

getByTrackerId:
SELECT * FROM Team
WHERE trackerId = :trackerId;

getByTrackerIdPaginated:
SELECT * FROM Team
WHERE trackerId = :trackerId
LIMIT :limit OFFSET :offset;

countByTrackerId:
SELECT COUNT(*) FROM Team
WHERE trackerId = :trackerId;

getByName:
SELECT * FROM Team
WHERE name = :name;

add:
INSERT INTO Team(name, trackerId)
VALUES(:name, :trackerId)
ON CONFLICT (name)
DO UPDATE SET trackerId = :trackerId
RETURNING id;
