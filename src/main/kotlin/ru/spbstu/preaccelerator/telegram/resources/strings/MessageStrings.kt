package ru.spbstu.preaccelerator.telegram.resources.strings

import dev.inmo.tgbotapi.extensions.utils.formatting.*
import org.koin.core.component.KoinComponent
import org.koin.core.component.inject
import ru.spbstu.preaccelerator.domain.entities.Protocol
import ru.spbstu.preaccelerator.domain.entities.ProtocolStatus
import ru.spbstu.preaccelerator.domain.entities.Team
import ru.spbstu.preaccelerator.domain.entities.module.Module
import ru.spbstu.preaccelerator.domain.usecases.AddUsersUseCase
import ru.spbstu.preaccelerator.telegram.parsers.Xlsx
import java.time.OffsetDateTime
import java.time.ZoneId
import java.time.format.DateTimeFormatter
import java.time.format.FormatStyle

// TODO: –í—Å—ë –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å
object MessageStrings : KoinComponent {
    private val zoneId: ZoneId by inject()

    object Start {
        const val AskContact = "TODO"
        const val InvalidDeepLink = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞"
        const val NoRoleAssigned = "–¢–≤–æ–µ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –∏–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–æ—Å—å"
        const val WelcomeCurator = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –∫—É—Ä–∞—Ç–æ—Ä."
        fun welcomeTracker(teams: List<Team>) = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã —Ç—Ä–µ–∫–µ—Ä –∫–æ–º–∞–Ω–¥ ${teams.joinToString { it.name }}."
        fun welcomeMember(team: Team) = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –¢—ã —É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã ${team.name}."
    }

    object Who {
        const val Empty = "–¢–≤–æ–µ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ"
        const val Curator = "–í—ã –∫—É—Ä–∞—Ç–æ—Ä"
        fun tracker(teams: List<Team>) = "–í—ã —Ç—Ä–µ–∫–µ—Ä –∫–æ–º–∞–Ω–¥ ${teams.joinToString { it.name }}"
        fun member(team: Team) = "–¢—ã —É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã ${team.name}"
    }

    object Cancel {
        const val Success = "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        const val NothingToCancel = "–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å"
    }

    object Fallback {
        const val NoSuchCommand = "–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –æ–Ω–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        const val NotImplemented = "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞"
    }

    object ChooseModuleAction {
        const val ChooseModuleAction = "–í—ã–±–µ—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
        const val ModuleLectures = "–õ–µ–∫—Ü–∏–∏ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è\\. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –ª–µ–∫—Ü–∏—é"
        const val Err = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∫–Ω–æ–ø–æ—á–Ω–æ–≥–æ –º–µ–Ω—é"
    }

    object DownloadHomework {
        const val ChooseTeam = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É"
        const val DownloadOption = "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∑–∞–¥–∞–Ω–∏–µ"
        const val Err = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–Ω–æ–ø–æ—á–Ω–æ–≥–æ –º–µ–Ω—é"
        fun moduleHomeworks(num: Module.Number) = "–ó–∞–¥–∞–Ω–∏—è –º–æ–¥—É–ª—è ‚Ññ${num.value}"

        const val NoHomeworksDone = "–ö–æ–º–∞–Ω–¥–∞ –µ—â—ë –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∏–∑ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è"
        const val ChooseModuleNumber = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥—É–ª—è"
    }

    object GetProtocol {
        fun teamProtocol(team: Team, protocol: Protocol) = buildEntities {
            link("–ü—Ä–æ—Ç–æ–∫–æ–ª –∫–æ–º–∞–Ω–¥—ã ${team.name}", protocol.url)
        }

        val NoProtocol = buildEntities {
            regular("–ü—Ä–æ—Ç–æ–∫–æ–ª –µ—â—ë –Ω–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω –∑–∞ –∫–æ–º–∞–Ω–¥–æ–π. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–≤–æ–µ–º—É —Ç—Ä–µ–∫–µ—Ä—É, —á—Ç–æ–±—ã –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª –µ–≥–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.")
        }
    }

    object AddUsers {
        const val WaitDocument = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —à–∞–±–ª–æ–Ω –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º"
        const val TemplateFilename = "–®–∞–±–ª–æ–Ω"
        const val InvalidFile = "–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥—ë–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è .xlsx —Ç–∞–±–ª–∏—Ü–µ–π"
        fun badFormat(errors: List<Xlsx.SheetErrors>) = errors.joinToString(separator = "\n") { tableErrors ->
            "–õ–∏—Å—Ç \"${tableErrors.name}\": –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ${
                if (tableErrors.rows.size == 1) "—Å—Ç—Ä–æ–∫–∏" else "—Å—Ç—Ä–æ–∫"
            } ${enumerationOfLimitedList(tableErrors.rows, 5)}"
        }

        fun result(result: AddUsersUseCase.Result) = buildString {
            if (result.notFoundTeams.isNotEmpty()) {
                appendLine(
                    "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—ã–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –Ω–µ ${
                        if (result.notFoundTeams.size == 1) "–Ω–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞" else "–Ω–∞–π–¥–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã"
                    } ${result.notFoundTeams.joinToString()}."
                )
            }
            appendLine(
                "–î–æ–±–∞–≤–ª–µ–Ω—ã ${result.membersCount} ${
                    pluralize(result.membersCount, "—É—á–∞—Å—Ç–Ω–∏–∫", "—É—á–∞—Å—Ç–Ω–∏–∫–∞", "—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                } –∏ ${result.teamsCount} ${
                    pluralize(result.teamsCount, "–∫–æ–º–∞–Ω–¥–∞", "–∫–æ–º–∞–Ω–¥—ã", "–∫–æ–º–∞–Ω–¥")
                }"
            )
        }
    }

    object ReviewProtocols {
        const val Accepted = "‚úÖ"
        const val Declined = "‚ùå"

        const val SendComment = "–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–∏—á–∏–Ω—É"
        const val SendCommentPlaceholder = "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
        const val NoMoreUnreviewedProtocols = "üéâ –ù–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç!"
        const val NoUnreviewedProtocols = "–ù–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –Ω–µ—Ç"
        const val ChooseTeam = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É, —É –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª—ã"

        fun protocol(protocol: Protocol?, team: Team, moduleNumber: Module.Number, status: String?, comment: String?) =
            buildEntities {
                if (status != null) {
                    regular(status)
                    regular(" ")
                }
                bold("–ú–æ–¥—É–ª—å ${moduleNumber.value}")
                regular(" | ")
                bold("–ö–æ–º–∞–Ω–¥–∞: ")
                regularln(team.name)
                if (protocol != null) {
                    bold("–ü—Ä–æ—Ç–æ–∫–æ–ª: ")
                    linkln(protocol.url)
                } else {
                    regularln("–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
                }
                if (comment != null) {
                    bold("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ")
                    regularln(comment)
                }
            }
    }

    object Error {
        fun internal(message: String?) = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: $message"
    }

    object Curator {
        fun addCuratorDeepLink(deepLink: String) = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é —Å—Å—ã–ª–∫—É –±—É–¥—É—â–µ–º—É –∫—É—Ä–∞—Ç–æ—Ä—É: $deepLink"
    }

    object ScheduleMeetings {
        const val InputModuleNumber = "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –º–æ–¥—É–ª—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–º–µ –≤—Å—Ç—Ä–µ—á–∏"
        const val ChooseTeam = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É"
        const val InputUrl = "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é"
        const val InputDateTime = "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥\\.–ú–ú\\.–≥–≥–≥–≥ —á—á:–º–º"
        const val MeetingIsCreated =
            "–ù–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π —Å–æ–∑–¥–∞–Ω–∞\\. –í—ã –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ –∑–∞ 2 —á–∞—Å–∞ –¥–æ –Ω–µ—ë"

        //TODO –Ω–∞–ø–∏—Å–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ
        const val MeetingNotCreated = "–í—Å—Ç—Ä–µ—á–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
        const val InvalidDataFormat = "–í–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö"
        const val InvalidModuleNumber = "–í–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–æ–¥—É–ª—è"
    }

    private val dateTimeFormatter = DateTimeFormatter.ofLocalizedDateTime(FormatStyle.LONG).withZone(zoneId)

    fun meetingCreationConfirmation(teamName: String, dateTime: OffsetDateTime, url: String) =
        """|–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É —Å –∫–æ–º–∞–Ω–¥–æ–π $teamName
           |–Ω–∞ ${dateTimeFormatter.format(dateTime)}
           |—Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é: $url
           |–í—Å—ë –≤–µ—Ä–Ω–æ?
        """.trimMargin()


    object Tracker {
        val map = mapOf(ProtocolStatus.Value.Unsent to "‚úâÔ∏è",
            ProtocolStatus.Value.Declined   to "‚ùå",
            ProtocolStatus.Value.Sent to "\uD83D\uDCE4",
            ProtocolStatus.Value.Accepted to "‚úÖ" )
        fun confirmationProtocol(moduleNumber: String) =
            "–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ $moduleNumber (–Ω–æ–º–µ—Ä –º–æ–¥—É–ª—è) –Ω–µ–¥–µ–ª–∏. –ö—É—Ä–∞—Ç–æ—Ä –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—ë–Ω –æ–± —ç—Ç–æ–º. –í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω –Ω–∞–π–¥—ë—Ç –Ω–µ–¥–æ—á—ë—Ç—ã."

        fun textForCurator(countOfWeek: String, teamName: String) =
            "–ü—Ä–æ—Ç–æ–∫–æ–ª $countOfWeek –Ω–µ–¥–µ–ª–∏  –æ—Ç –∫–æ–º–∞–Ω–¥—ã $teamName –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É."

        fun explanationReasons(countOfWeek: String, reason: String) =
            "–ö—É—Ä–∞—Ç–æ—Ä –Ω–µ –ø—Ä–∏–Ω—è–ª –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–µ–¥–µ–ª–∏ $countOfWeek\n–ü—Ä–∏—á–∏–Ω–∞: $reason"

        const val ProtocolHasBeenSent = "–ü—Ä–æ—Ç–æ–∫–æ–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ"
        const val ChooseTeam = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É"
        const val ProtocolChanged = "–ü—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
        const val ChooseModule = "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å"
        const val InputGoogleDiskUrl = "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ Google –¥–æ–∫ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º –≤—Å—Ç—Ä–µ—á–∏"
        const val MessageCurator = "–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –∫—É—Ä–∞—Ç–æ—Ä–∞ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"
        const val Attention = "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª"
        const val ViewProtocol = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª"
        const val ReadyCheck = "–ì–æ—Ç–æ–≤—ã –æ—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª —Å–µ–π—á–∞—Å?"
    }
}
